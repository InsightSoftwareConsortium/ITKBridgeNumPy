%begin %{
#include "PatchedPython27pyconfig.h"
%}

%extend itkPyVnl@PyVnlTypes@{
    %pythoncode %{

    def GetArrayViewFromVnlVector(vnl_vector):
        """  Get a NumPy array view of a Vnl vector.

        Warning: No copy of the data is performed. Using an array
        view after its source vector has been deleted can results in corrupt values
        or a segfault.
        """

        if not HAVE_NUMPY:
            raise ImportError('Numpy not available.')

        itksize = vnl_vector.size()
        shape   = [itksize]

        pixelType     = "@PixelType@"
        numpydatatype = _get_numpy_pixelid(pixelType)
        memview       = itkPyVnl@PyVnlTypes@._GetArrayViewFromVnlVector(vnl_vector)
        itkndarrview  = numpy.asarray(memview).view(dtype = numpydatatype).reshape(shape).view(itkndarray)
        itkndarrview.SetConvertedFlag(converted = True)

        return itkndarrview

    GetArrayViewFromVnlVector = staticmethod(GetArrayViewFromVnlVector)

    def GetVnlVectorViewFromArray(ndarr):
        """ Get a Vnl vector view of a NumPy array.

        Warning: No copy of the data is performed. Using a VNL vector
        view after its source array has been deleted can results in corrupt values
        or a segfault.
        """

        if not HAVE_NUMPY:
            raise ImportError('Numpy not available.')

        assert ndarr.ndim == 1 , \
            "Only arrays of 1 dimension are supported."

        vecview = itkPyVnl@PyVnlTypes@._GetVnlVectorViewFromArray( ndarr, ndarr.shape)

        return vecview

    GetVnlVectorViewFromArray = staticmethod(GetVnlVectorViewFromArray)

    def GetArrayViewFromVnlMatrix(vnl_matrix):
        """  Get a NumPy array view of a VNL matrix.

        Warning: No copy of the data is performed. Using an array
        view after its source matrix has been deleted can results in corrupt values
        or a segfault.
        """

        if not HAVE_NUMPY:
            raise ImportError('Numpy not available.')

        cols = vnl_matrix.columns()
        rows = vnl_matrix.rows()
        dim     = 2
        shape   = [rows,cols]

        pixelType     = "@PixelType@"
        numpydatatype = _get_numpy_pixelid(pixelType)
        memview       = itkPyVnl@PyVnlTypes@._GetArrayViewFromVnlMatrix(vnl_matrix)
        itkndarrview  = numpy.asarray(memview).view(dtype = numpydatatype).reshape(shape).view(itkndarray)
        itkndarrview.SetConvertedFlag(converted = True)

        return itkndarrview

    GetArrayViewFromVnlMatrix = staticmethod(GetArrayViewFromVnlMatrix)

    def GetVnlMatrixViewFromArray(ndarr):
        """ Get a VNL Matrix view of a NumPy array.

        Warning: No copy of the data is performed. Using a VNL matrix
        view after its source array has been deleted can results in corrupt values
        or a segfault.
        """
        
        if not HAVE_NUMPY:
            raise ImportError('Numpy not available.')

        assert ndarr.ndim == 2 , \
            "Only arrays of 2 dimensions are supported."

        matview = itkPyVnl@PyVnlTypes@._GetVnlMatrixViewFromArray( ndarr, ndarr.shape)

        return matview

    GetVnlMatrixViewFromArray = staticmethod(GetVnlMatrixViewFromArray)

  %}
};
